service: dynamodb-serverless-crud-api

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-south-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.productsTableName}

custom:
  productsTableName: products-table-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  getProduct:
    handler: api.getProduct
    name: get-product
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: product/{productId}
          method: GET
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource: "arn:aws:dynamodb:ap-south-1:*:table/${self:custom.productsTableName}"
  createProduct:
    handler: api.createProduct
    name: create-product
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: product
          method: POST
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: "arn:aws:dynamodb:ap-south-1:*:table/${self:custom.productsTableName}"
  updateProduct:
    handler: api.updateProduct
    name: update-product
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: product/{productId}
          method: PATCH
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: "arn:aws:dynamodb:ap-south-1:*:table/${self:custom.productsTableName}"
  deleteProduct:
    handler: api.deleteProduct
    name: delete-product
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: product/{productId}
          method: DELETE
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: "arn:aws:dynamodb:ap-south-1:*:table/${self:custom.productsTableName}"
  getAllProducts:
    handler: api.getAllProducts
    name: get-all-products
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: products
          method: GET
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: "arn:aws:dynamodb:ap-south-1:*:table/${self:custom.productsTableName}"

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.productsTableName}
        AttributeDefinitions:
          - AttributeName: productId
            AttributeType: S
        KeySchema:
          - AttributeName: productId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
